{"ts":1354629221487,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<html>\n\t<head>\n\t\t<title>Pixelate Demo</title>\n\t\t<style>\n\t\t\tbody\n\t\t\t{\n\t\t\t\tbackground-color: #000;\n\t\t\t\tcolor: #fff;\n\t\t\t\twidth: 800px;\n\t\t\t\tmargin: 0 auto;\n\t\t\t}\n\t\t\t\n\t\t\th1, h2\n\t\t\t{\n\t\t\t\ttext-transform: uppercase;\n\t\t\t}\n\t\t\t\n\t\t\ta, a:visited\n\t\t\t{\n\t\t\t\tcolor: #303133;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t\n\t<body>\n\t\t\n\t\t<h1>Pixelazation Demo</h1>\n\t\t<a href=\"#\">Back to the tutorial</a>\n\t\t<p>I will break down what I do for each step.</p>\n\t\t<p>Thanks to David DeSandro and John Schulz. I used a few ideas from their excellent pixelization library <a href=\"http://desandro.com/resources/close-pixelate/\">Close Pixelate</a></p>\n\t\t<h2>Regular photo</h2>\n\t\t<p>This is a photo of my dog Dexter not scaled at all. It's just a regular img tag.</p> \n\t\t<img src=\"images/dexter3.jpg\">\n\t\t<h2>Photo scaled down</h2>\n\t\t<p>This is the same photo scaled down in a canvas element. The function tests for the larger side (height or width) and then takes 100 divided by the larger side and then multiples it by 50% with a floor of 35% for really small photos. This will scale down larger photos proportionately to their size. This photo has a width of 604 which comes out to about 8.28%</p> \n\t\t<img id=\"scaledDexter\" src=\"images/dexter3.jpg\">\n\t\t<h2>Photo Pixelized</h2> \n\t\t<p>This canvas has the scaled down canvas as it's source and then scales it back up to the original specs. Instant pixelization.</p>\n\t\t<img id=\"dexter3\" src=\"images/dexter3.jpg\">\n\t\t<h2>Manual pixelization ration</h2>\n\t\t<p>You can manually set the scale ratio by using img_object.pixelize(.25). With an image this large it won't be very pixelized</p>\n\t\t<img id=\"dexter25\" src=\"images/dexter3.jpg\">\n\t\t<h2>Pixelize past recognition</h2>\n\t\t<p>Just be careful you don't set to a high a rate or your pictures can become unrecognizable.</p>\n\t\t<img id=\"dexter2\" src=\"images/dexter3.jpg\">\n\t\t\n\t\t<script src=\"pixelize.js\"></script>\n\t\t<script>\n\t\t\tvar docReady = function(){\n\t\t\t\t//first photo of dexter to pixelize\n\t\t\t\tvar dexter3 = document.getElementById('dexter3').pixelize();\n\t\t\t\t\n\t\t\t\tvar dexter25 = document.getElementById('dexter25').pixelize(.25);\n\t\t\t\t\n\t\t\t\t//Next photo of dexter\n\t\t\t\tvar dexter2 = document.getElementById('dexter2').pixelize(.02);\n\t\t\t\t\n\t\t\t\tvar scaledDexter = document.getElementById('scaledDexter');\n\t\t\t\tscaledDexter.addEventListener( 'load', function(){\n\t\t\t\t\t\n\t\t\t\t\tvar largerSide = (this.height > this.width) ? this.height : this.width;\n\t\t\t\t\tscaleFactor = (largerSide > 150) ? (50/largerSide) : .35;\n\t\t\t\t\t\n\t\t\t\t\tvar newCanvas = document.createElement('canvas');\n\t\t\t\t\tnewCanvas.height = this.height*scaleFactor;\n\t\t\t\t\tnewCanvas.width = this.width*scaleFactor;\n\t\t\t\n\t\t\t\t\tvar context = newCanvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(this, 0,0,this.width*scaleFactor, this.height*scaleFactor );\n\n\t\t\t\t\tthis.parentNode.replaceChild(newCanvas, this);\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\twindow.addEventListener( 'DOMContentLoaded', docReady, false);\n\t\t</script>\n\t</body>\n</html>"]],"start1":0,"start2":0,"length1":0,"length2":2898}]],"length":2898}
{"contributors":[],"silentsave":false,"ts":1354629385190,"patch":[[{"diffs":[[0,"kes "],[-1,"10"],[1,"5"],[0,"0 di"]],"start1":909,"start2":909,"length1":10,"length2":9},{"diffs":[[0,"side"],[-1," and then multiples it by 50%"],[0," wit"]],"start1":938,"start2":938,"length1":37,"length2":8}]],"length":2868,"saved":false}
